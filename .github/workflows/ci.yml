name: ci

on:
  pull_request:
    branches: ["main"]

env:
  RUST_VERSION: "1.83.0"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
    strategy:
      matrix:
        build:
          # - freebsd-x86_64
          - linux-arm64-gnu
          - linux-arm64-musl
          - linux-x86_64-gnu
          - linux-x86_64-musl
          - macos-arm64
          - macos-x86_64
          # - windows-x86_64-msvc
        include:
          # - build: freebsd-x86_64
          #   os: ubuntu-22.04
          #   target: x86_64-unknown-freebsd
          - build: linux-arm64-gnu
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - build: linux-arm64-musl
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
          - build: linux-x86_64-gnu
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - build: linux-x86_64-musl
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - build: macos-x86_64
            os: macos-14
            target: x86_64-apple-darwin
          - build: macos-arm64
            os: macos-14
            target: aarch64-apple-darwin
          # - build: windows-x86_64-msvc
          #   os: windows-2022
          #   target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          target: ${{ matrix.target }}
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt

      - name: Rust cargo fetch
        run: cargo fetch

      - name: Rust cargo format
        run: cargo fmt --all -- --check

      - name: Rust cargo clippy
        run: cargo clippy -- -D warnings

      - name: Rust cargo test
        run: cargo test

      - name: Install cross
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
          echo CARGO=cross >> $GITHUB_ENV

      - name: Rust cargo build
        run: ${{ env.CARGO }} build --locked --target ${{ matrix.target }}
