name: ci

on:
  pull_request:
    branches: ["main"]

env:
  RUST_VERSION: "1.84.1"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt

      - name: Update git submodules
        run: git submodule update --init

      - name: Rust cargo format
        run: cargo fmt --all -- --check

      - name: Rust cargo clippy
        run: cargo clippy -- -D warnings

      - name: Rust cargo test
        run: cargo test

      - name: Rust cargo build
        run: cargo build --locked

  build:
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
    strategy:
      matrix:
        build:
          - freebsd-x86_64
          - linux-arm64-gnu
          - linux-arm64-musl
          - linux-x86_64-gnu
          - linux-x86_64-musl
          - macos-arm64
          - macos-x86_64
          - windows-x86_64-msvc
        include:
          - build: freebsd-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-freebsd
          - build: linux-arm64-gnu
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - build: linux-arm64-musl
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
          - build: linux-x86_64-gnu
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - build: linux-x86_64-musl
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - build: macos-arm64
            os: macos-14
            target: aarch64-apple-darwin
          - build: macos-x86_64
            os: macos-14
            target: x86_64-apple-darwin
          - build: windows-x86_64-msvc
            os: windows-2022
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: ${{ matrix.target }}

      - name: Install cross
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          cargo install cross@0.2.5 --locked
          echo "CARGO=cross" >> $GITHUB_ENV

      - name: Rust cargo build
        run: ${{ env.CARGO }} build --locked --target ${{ matrix.target }}
